"use strict";(self.webpackChunknext_front=self.webpackChunknext_front||[]).push([[583],{"./stories/TestButton.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,default:()=>TestButton_stories});var defineProperty=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/defineProperty.js"),react=__webpack_require__("./node_modules/react/index.js");var[ButtonGroupProvider,useButtonGroup]=function createContext(options={}){const{name,strict=!0,hookName="useContext",providerName="Provider",errorMessage,defaultValue}=options,Context=(0,react.createContext)(defaultValue);return Context.displayName=name,[Context.Provider,function useContext(){var _a;const context=(0,react.useContext)(Context);if(!context&&strict){const error=new Error(null!=errorMessage?errorMessage:function getErrorMessage(hook,provider){return`${hook} returned \`undefined\`. Seems you forgot to wrap component within ${provider}`}(hookName,providerName));throw error.name="ContextError",null==(_a=Error.captureStackTrace)||_a.call(Error,error,useContext),error}return context},Context]}({strict:!1,name:"ButtonGroupContext"}),dist=__webpack_require__("./node_modules/@chakra-ui/styled-system/dist/index.mjs"),allPropNames=new Set([...dist.cC,"textStyle","layerStyle","apply","noOfLines","focusBorderColor","errorBorderColor","as","__css","css","sx"]),validHTMLProps=new Set(["htmlWidth","htmlHeight","htmlSize","htmlTranslate"]);function shouldForwardProp(prop){return validHTMLProps.has(prop)||!allPropNames.has(prop)}var ColorModeContext=(0,react.createContext)({});function useColorMode(){const context=(0,react.useContext)(ColorModeContext);if(void 0===context)throw new Error("useColorMode must be used within a ColorModeProvider");return context}ColorModeContext.displayName="ColorModeContext";var lodash_mergewith=__webpack_require__("./node_modules/lodash.mergewith/index.js"),lodash_mergewith_default=__webpack_require__.n(lodash_mergewith);var memoizedGet=(fn=>{const cache=new WeakMap;return(obj,path,fallback,index)=>{if(void 0===obj)return fn(obj,path,fallback);cache.has(obj)||cache.set(obj,new Map);const map=cache.get(obj);if(map.has(path))return map.get(path);const value=fn(obj,path,fallback,index);return map.set(path,value),value}})((function get(obj,path,fallback,index){const key="string"==typeof path?path.split("."):[path];for(index=0;index<key.length&&obj;index+=1)obj=obj[key[index]];return void 0===obj?fallback:obj}));function objectFilter(object,fn){const result={};return Object.keys(object).forEach((key=>{const value=object[key];fn(value,key,object)&&(result[key]=value)})),result}var filterUndefined=object=>objectFilter(object,(val=>null!=val));var _a,emotion_styled_browser_esm=__webpack_require__("./node_modules/@emotion/styled/dist/emotion-styled.browser.esm.js"),emotion_styled=null!=(_a=emotion_styled_browser_esm.default.default)?_a:emotion_styled_browser_esm.default,toCSSObject=({baseStyle})=>props=>{const{theme,css:cssProp,__css,sx,...rest}=props,styleProps=objectFilter(rest,((_,prop)=>(0,dist.ZR)(prop))),finalStyles=function assignAfter(target,...sources){if(null==target)throw new TypeError("Cannot convert undefined or null to object");const result={...target};for(const nextSource of sources)if(null!=nextSource)for(const nextKey in nextSource)Object.prototype.hasOwnProperty.call(nextSource,nextKey)&&(nextKey in result&&delete result[nextKey],result[nextKey]=nextSource[nextKey]);return result}({},__css,function runIfFn(valueOrFn,...args){return function isFunction(value){return"function"==typeof value}(valueOrFn)?valueOrFn(...args):valueOrFn}(baseStyle,props),filterUndefined(styleProps),sx),computedCSS=(0,dist.iv)(finalStyles)(props.theme);return cssProp?[computedCSS,cssProp]:computedCSS};function styled(component,options){const{baseStyle,...styledOptions}=null!=options?options:{};styledOptions.shouldForwardProp||(styledOptions.shouldForwardProp=shouldForwardProp);const styleObject=toCSSObject({baseStyle}),Component=emotion_styled(component,styledOptions)(styleObject);return react.forwardRef((function ChakraComponent(props,ref){const{colorMode,forced}=useColorMode();return react.createElement(Component,{ref,"data-theme":forced?colorMode:void 0,...props})}))}var chakra=function factory(){const cache=new Map;return new Proxy(styled,{apply:(target,thisArg,argArray)=>styled(...argArray),get:(_,element)=>(cache.has(element)||cache.set(element,styled(element)),cache.get(element))})}(),shared_utils_dist=__webpack_require__("./node_modules/@chakra-ui/shared-utils/dist/index.mjs"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function ButtonIcon(props){const{children,className,...rest}=props,_children=(0,react.isValidElement)(children)?(0,react.cloneElement)(children,{"aria-hidden":!0,focusable:!1}):children,_className=(0,shared_utils_dist.cx)("chakra-button__icon",className);return(0,jsx_runtime.jsx)(chakra.span,{display:"inline-flex",alignSelf:"center",flexShrink:0,...rest,className:_className,children:_children})}ButtonIcon.displayName="ButtonIcon";var emotion_react_browser_esm=__webpack_require__("./node_modules/@emotion/react/dist/emotion-react.browser.esm.js");function forwardRef(component){return(0,react.forwardRef)(component)}var emotion_element_c39617d8_browser_esm=__webpack_require__("./node_modules/@emotion/react/dist/emotion-element-c39617d8.browser.esm.js");function chunk_7V3ZYTH7_useChakra(){return{...useColorMode(),theme:function chunk_NLMMK76H_useTheme(){const theme=(0,react.useContext)(emotion_element_c39617d8_browser_esm.T);if(!theme)throw Error("useTheme: `theme` is undefined. Seems you forgot to wrap your app in `<ChakraProvider />` or `<ThemeProvider />`");return theme}()}}var react_fast_compare=__webpack_require__("./node_modules/react-fast-compare/index.js"),react_fast_compare_default=__webpack_require__.n(react_fast_compare);function useStyleConfigImpl(themeKey,props={}){var _a;const{styleConfig:styleConfigProp,...rest}=props,{theme,colorMode}=chunk_7V3ZYTH7_useChakra(),themeStyleConfig=themeKey?memoizedGet(theme,`components.${themeKey}`):void 0,styleConfig=styleConfigProp||themeStyleConfig,mergedProps=lodash_mergewith_default()({theme,colorMode},null!=(_a=null==styleConfig?void 0:styleConfig.defaultProps)?_a:{},filterUndefined(function omit(object,keys){const result={};return Object.keys(object).forEach((key=>{keys.includes(key)||(result[key]=object[key])})),result}(rest,["children"]))),stylesRef=(0,react.useRef)({});if(styleConfig){const styles=(0,dist.Ud)(styleConfig)(mergedProps);react_fast_compare_default()(stylesRef.current,styles)||(stylesRef.current=styles)}return stylesRef.current}function useStyleConfig(themeKey,props={}){return useStyleConfigImpl(themeKey,props)}var spin=(0,emotion_react_browser_esm.keyframes)({"0%":{transform:"rotate(0deg)"},"100%":{transform:"rotate(360deg)"}}),Spinner=forwardRef(((props,ref)=>{const styles=useStyleConfig("Spinner",props),{label="Loading...",thickness="2px",speed="0.45s",emptyColor="transparent",className,...rest}=(0,dist.Lr)(props),_className=(0,shared_utils_dist.cx)("chakra-spinner",className),spinnerStyles={display:"inline-block",borderColor:"currentColor",borderStyle:"solid",borderRadius:"99999px",borderWidth:thickness,borderBottomColor:emptyColor,borderLeftColor:emptyColor,animation:`${spin} ${speed} linear infinite`,...styles};return(0,jsx_runtime.jsx)(chakra.div,{ref,__css:spinnerStyles,className:_className,...rest,children:label&&(0,jsx_runtime.jsx)(chakra.span,{srOnly:!0,children:label})})}));function ButtonSpinner(props){const{label,placement,spacing="0.5rem",children=(0,jsx_runtime.jsx)(Spinner,{color:"currentColor",width:"1em",height:"1em"}),className,__css,...rest}=props,_className=(0,shared_utils_dist.cx)("chakra-button__spinner",className),marginProp="start"===placement?"marginEnd":"marginStart",spinnerStyles=(0,react.useMemo)((()=>({display:"flex",alignItems:"center",position:label?"relative":"absolute",[marginProp]:label?spacing:0,fontSize:"1em",lineHeight:"normal",...__css})),[__css,label,marginProp,spacing]);return(0,jsx_runtime.jsx)(chakra.div,{className:_className,...rest,__css:spinnerStyles,children})}function mergeRefs(...refs){return node=>{refs.forEach((ref=>{!function assignRef(ref,value){if(null!=ref)if("function"!=typeof ref)try{ref.current=value}catch(error){throw new Error(`Cannot assign value '${value}' to ref '${ref}'`)}else ref(value)}(ref,node)}))}}function useMergeRefs(...refs){return(0,react.useMemo)((()=>mergeRefs(...refs)),refs)}Spinner.displayName="Spinner",ButtonSpinner.displayName="ButtonSpinner";var Button=forwardRef(((props,ref)=>{const group=useButtonGroup(),styles=useStyleConfig("Button",{...group,...props}),{isDisabled=null==group?void 0:group.isDisabled,isLoading,isActive,children,leftIcon,rightIcon,loadingText,iconSpacing="0.5rem",type,spinner,spinnerPlacement="start",className,as,...rest}=(0,dist.Lr)(props),buttonStyles=(0,react.useMemo)((()=>{const _focus={...null==styles?void 0:styles._focus,zIndex:1};return{display:"inline-flex",appearance:"none",alignItems:"center",justifyContent:"center",userSelect:"none",position:"relative",whiteSpace:"nowrap",verticalAlign:"middle",outline:"none",...styles,...!!group&&{_focus}}}),[styles,group]),{ref:_ref,type:defaultType}=function useButtonType(value){const[isButton,setIsButton]=(0,react.useState)(!value);return{ref:(0,react.useCallback)((node=>{node&&setIsButton("BUTTON"===node.tagName)}),[]),type:isButton?"button":void 0}}(as),contentProps={rightIcon,leftIcon,iconSpacing,children};return(0,jsx_runtime.jsxs)(chakra.button,{ref:useMergeRefs(ref,_ref),as,type:null!=type?type:defaultType,"data-active":(0,shared_utils_dist.PB)(isActive),"data-loading":(0,shared_utils_dist.PB)(isLoading),__css:buttonStyles,className:(0,shared_utils_dist.cx)("chakra-button",className),...rest,disabled:isDisabled||isLoading,children:[isLoading&&"start"===spinnerPlacement&&(0,jsx_runtime.jsx)(ButtonSpinner,{className:"chakra-button__spinner--start",label:loadingText,placement:"start",spacing:iconSpacing,children:spinner}),isLoading?loadingText||(0,jsx_runtime.jsx)(chakra.span,{opacity:0,children:(0,jsx_runtime.jsx)(ButtonContent,{...contentProps})}):(0,jsx_runtime.jsx)(ButtonContent,{...contentProps}),isLoading&&"end"===spinnerPlacement&&(0,jsx_runtime.jsx)(ButtonSpinner,{className:"chakra-button__spinner--end",label:loadingText,placement:"end",spacing:iconSpacing,children:spinner})]})}));function ButtonContent(props){const{leftIcon,rightIcon,children,iconSpacing}=props;return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[leftIcon&&(0,jsx_runtime.jsx)(ButtonIcon,{marginEnd:iconSpacing,children:leftIcon}),children,rightIcon&&(0,jsx_runtime.jsx)(ButtonIcon,{marginStart:iconSpacing,children:rightIcon})]})}Button.displayName="Button";var __jsx=react.createElement,TestButton=function TestButton(_ref){var text=_ref.text,color=_ref.color;return __jsx(Button,{bgColor:color},text)};TestButton.displayName="TestButton",TestButton.__docgenInfo={description:"",methods:[],displayName:"TestButton"};const Button_TestButton=TestButton;try{TestButton.displayName="TestButton",TestButton.__docgenInfo={description:"",displayName:"TestButton",props:{text:{defaultValue:null,description:"",name:"text",required:!0,type:{name:"string"}},color:{defaultValue:null,description:"",name:"color",required:!0,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/ui-elements/Button/TestButton.tsx#TestButton"]={docgenInfo:TestButton.__docgenInfo,name:"TestButton",path:"src/components/ui-elements/Button/TestButton.tsx#TestButton"})}catch(__react_docgen_typescript_loader_error){}var _Default$parameters,_Default$parameters2,_Default$parameters2$;function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){(0,defineProperty.Z)(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}const TestButton_stories={title:"components/ui-elements/Button/TestButton",component:Button_TestButton,argTypes:{}};var Default={args:{text:"test text",color:"red"}};Default.parameters=_objectSpread(_objectSpread({},Default.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_Default$parameters=Default.parameters)||void 0===_Default$parameters?void 0:_Default$parameters.docs),{},{source:_objectSpread({originalSource:"{\n  args: {\n    text: 'test text',\n    color: 'red'\n  }\n}"},null===(_Default$parameters2=Default.parameters)||void 0===_Default$parameters2||null===(_Default$parameters2$=_Default$parameters2.docs)||void 0===_Default$parameters2$?void 0:_Default$parameters2$.source)})})}}]);